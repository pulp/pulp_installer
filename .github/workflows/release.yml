---
name: Pulp Release CI
on:
  push:
    tags:
      - '*'
jobs:
  molecule:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # Testing different python versions because of
      # https://pulp.plan.io/issues/5768#note-17
      #
      # Certain old versions are in distros:
      # Fedora / EPEL8 / Ubuntu 20.04: ansible 2.9
      # Debian 11 / Ubuntu 21.10: ansible 2.10
      matrix:
        include:
          - test_type: release-static
            ansible: "ansible~=2.9.0"
            python: "2.7"
          - test_type: packages-static
            ansible: "ansible~=2.10.0"
            python: "3.7"
          - test_type: release-cluster
            ansible: "ansible-core" # currently at 2.12.2
            python: "3.8"
          - test_type: packages-cluster
            ansible: "ansible" # currently at 5.3.0
            python: "3.9"
          - test_type: release-upgrade
            ansible: "ansible-core~=2.11.0" # used by ansible==4.10.0
            python: "3.6"
          - test_type: packages-upgrade
            ansible: "ansible~=2.9.0"
            python: "2.7"
    steps:
      - uses: actions/checkout@v2.3.1
      - name: Configure the kernel to allow containers to talk to eachother
        run: |
          sudo sysctl net.bridge.bridge-nf-call-iptables=0
          sudo sysctl net.bridge.bridge-nf-call-arptables=0
          sudo sysctl net.bridge.bridge-nf-call-ip6tables=0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Upgrade pip
        run: |
          pip install --upgrade pip
      - name: Install Python 2 packages
        if: matrix.python == '2.7'
        run: |
          pip install "sh<1.13" "ruamel.yaml<0.17" "ruamel.yaml.clib<0.2.3"
      - name: Install Python 3 packages
        if: matrix.python != '2.7'
        run: |
          pip install molecule-docker
      - name: Install Ansible & Molecule
        run: |
          sudo apt remove ansible
          pip install docker molecule ${{ matrix.ansible }}
      - name: Setting pulp.pulp_installer collection
        # Downloading dependencies sometimes fails the 1st time, so retry
        run: |
          make vendor || make vendor
          make install || make install
          ansible-galaxy collection install -p build/collections --force community.docker ||
          ansible-galaxy collection install -p build/collections --force community.docker
        shell: bash
      - name: Molecule dependency
        # Downloading dependencies sometimes fails the 1st time
        run: |
          ansible --version
          molecule dependency --scenario-name ${{ matrix.test_type }}
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
        shell: bash
      - name: Molecule create & prepare
        # Pulling images (for upgrades) sometimes fails the 1st time.
        run: |
          ansible --version
          molecule create --scenario-name ${{ matrix.test_type }} ||
          molecule create --scenario-name ${{ matrix.test_type }}
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
        shell: bash
      - name: Molecule converge
        run: |
          ansible --version
          molecule converge --scenario-name ${{ matrix.test_type }}
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
        shell: bash
      - name: Molecule idempotence
        # release-upgrade is multi-phase upgrading, a non-idempotent playbook
        if: matrix.test_type != 'release-upgrade'
        run: |
          ansible --version
          molecule idempotence --scenario-name ${{ matrix.test_type }}
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
        shell: bash
      - name: Molecule verify
        run: |
          ansible --version
          molecule verify --scenario-name ${{ matrix.test_type }}
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
        shell: bash

  release:
    runs-on: ubuntu-latest
    needs: molecule
    if: github.repository == 'pulp/pulp_installer'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          pip install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
      - name: Setting secrets
        run: python3 .github/workflows/scripts/secrets.py "$SECRETS_CONTEXT"
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: Install Ansible
        run: pip install --upgrade ansible
      - name: Build Ansible Collection
        run: |
          make vendor
          make dist
      - name: Deploy Ansible Collection
        run: make publish GALAXY_API_KEY=${{ secrets.GALAXY_API_KEY }}
      - name: Run publish docs script
        env:
          PULP_DOCS_KEY: ${{ secrets.PULP_DOCS_KEY }}
        run: .ci/scripts/publish_docs.sh ${GITHUB_REF##*/}
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2.3.1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install Ansible
        run: |
          pip install --upgrade pip
          sudo apt remove ansible
          pip install ansible-core
      - name: Install Ansible-lint
        run: |
          pip install ansible-lint[yamllint]
      - name: Lint test
        run: |
          ansible-lint
