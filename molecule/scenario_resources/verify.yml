---
# This is an example playbook to execute testinfra tests.
# Tests need distributed to the appropriate ansible host/groups
# prior to execution by `py.test`.

- name: Verify
  hosts: all
  become: true
  vars:
    testinfra_test_directory: /tmp/molecule/testinfra
    testinfra_bin: "{{ pulp_lib_path }}/bin/py.test"
  tasks:
    - name: Skip this task if we skip the tests
      block:
        - name: Install testinfra
          pip:
            name: pytest-testinfra
            state: present
            virtualenv: '{{ pulp_lib_path }}'
            virtualenv_command: '{{ pulp_python_interpreter }} -m venv'

        - name: Install iproute (needed for socket connection tests) on Red Hat based systems
          package:
            name: iproute
            state: present
          when:
            - ansible_os_family in ["RedHat","Rocky"]

        - name: Install iproute2 and curl on Debian based systems
          package:
            name: "{{ item }}"
            state: present
          when:
            - ansible_os_family == "Debian"
          with_items:
            - curl
            - iproute2

        - name: Create testinfra directory for test files
          file:
            path: "{{ testinfra_test_directory }}"
            state: directory

        - name: Copy testinfra tests to remote
          copy:
            src: "{{ item }}"
            dest: "{{ testinfra_test_directory }}/{{ item | basename }}"
          register: copy_testinfra_tests
          with_fileglob:
            - "{{ lookup('env', 'MOLECULE_VERIFIER_TEST_DIRECTORY') }}/testinfra_*.py"

        - block:
            - name: Create pulp_smash directory to keep settings.json file
              file:
                path: "{{ pulp_smash_config_dir }}"
                mode: '0755'
                state: directory

            - name: Copy pulp smash settings.json to avoid file not found exception
              file:
                src: "{{ pulp_lib_path }}/.config/pulp_smash/settings.json"
                dest: "{{ pulp_smash_config_dir }}/settings.json"
                state: link
          when: pulp_smash_installed

        - name: Execute testinfra tests
          command: "{{ testinfra_bin }} {{ item.dest }}"
          register: test_results
          with_items: "{{ copy_testinfra_tests.results }}"
          changed_when: test_results.changed
          ignore_errors: true

        - name: Display details about the testinfra results
          debug:
            msg: "{{ item.stdout_lines }}"
          with_items: "{{ test_results.results }}"


        - name: Fail when tests fail
          fail:
            msg: "testinfra failed to validate"
          when: item.rc != 0
          with_items: "{{ test_results.results }}"


      when: not __pulp_molecule_verify_skip_testinfra_tests | default(false)

    - name: Obtain 1 node's database fields encryption key
      slurp:
        src: "{{ pulp_settings.db_encryption_key | default('/etc/pulp/certs/database_fields.symmetric.key') }}"
      run_once: true
      delegate_to: "{{ groups['all'][0] }}"
      register: primary_db_key

    - debug:
        var: primary_db_key

    - name: Obtain the other nodes' database fields encryption keys
      slurp:
        src: "{{ pulp_settings.db_encryption_key | default('/etc/pulp/certs/database_fields.symmetric.key') }}"
      register: db_key
      when: __pulp_molecule_verify_has_db_fields_key | default(true)

    - debug:
        var: db_key
      when: __pulp_molecule_verify_has_db_fields_key | default(true)

    - name: Verify that the other nodes' database fields encryption keys are the same
      assert:
        that:
          - primary_db_key.content == db_key.content
      when:
        - inventory_hostname != groups['all'][0]
        - __pulp_run_once
        - __pulp_molecule_verify_has_db_fields_key | default(true)

    - name: Verify that the other nodes' database fields encryption keys differ
      assert:
        that:
          - primary_db_key.content != db_key.content
      when:
        - inventory_hostname != groups['all'][0]
        - not __pulp_run_once
        - __pulp_molecule_verify_has_db_fields_key | default(true)

    - name: Install dependency for RAM usage check (RedHat)
      yum:
        name: procps-ng
        state: present
      when: ansible_os_family in ["RedHat","Rocky"]

    - name: Install dependency for RAM usage check (Debian)
      apt:
        name: procps
        state: present
      when: ansible_facts.os_family == 'Debian'

    - name: Check RAM usage
      command: free -m
      changed_when: false
      register: result

    - name: Show RAM usage, so we know if our CI env is low on RAM
      debug: var=result.stdout_lines
