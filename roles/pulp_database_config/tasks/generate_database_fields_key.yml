---
- name: Check for existing Pulp Database Encryption Key
  stat:
    path: '{{ __pulp_db_fields_key_path }}'
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: __pulp_db_fields_key_file
  become: true

# A theoretically better approach would be to use the jinja2 filter
# `b64encode` and not have to install `openssl`.
# However, then the bytes to be encoded would have to be put
# into a temporary ansible variable on the ansible management node, and the
# templated file may be placed elsewhere on disk temporarily. It seems
# more secure to just do it this way.

# Fortunately every single distro we support uses this package name
# for /usr/bin/openssl
# https://pkgs.org/search/?q=%2Fusr%2Fbin%2Fopenssl
- name: Install the openssl command
  package:
    name: openssl
    state: present
  become: true
  when: not __pulp_db_fields_key_file.stat.exists

- name: Generate Pulp Database Encryption Key
  shell: >-
    set -o pipefail &&
    umask 0077 &&
    openssl rand -base64 32
    | tr '+/' '-_' > {{ __pulp_db_fields_key_path }}
  args:
    # Debian defaults to bourne, but it doesn't understand pipefail.
    executable: /bin/bash
  notify: Restart all Pulp services
  become: true
  become_user: "{{ pulp_user }}"
  when: not __pulp_db_fields_key_file.stat.exists

- name: Ensure correct permissions on new Pulp Database Encryption Key
  file:
    path: '{{ __pulp_db_fields_key_path }}'
    owner: 'root'
    group: "{{ pulp_group }}"
    mode: 0640
    serole: _default
    setype: _default
    seuser: _default
  become: true
