[Unit]
Description=Pulp Content App
After=network-online.target
Wants=network-online.target
# When systemd stops or restarts the meta pulpcore.service, the action is propagated to this service
PartOf=pulpcore.service
# Start this service after the pulpcore.service starts
After=pulpcore.service

[Service]
Type=notify
EnvironmentFile=-/etc/default/pulpcore
EnvironmentFile=-/etc/default/pulpcore-content
Environment="DJANGO_SETTINGS_MODULE=pulpcore.app.settings"
Environment="PULP_SETTINGS={{ pulp_settings_file }}"
Environment="PATH={{ pulp_install_dir }}/bin:{{ default_bin_path }}"
{% if pulp_ld_library_path is defined and pulp_ld_library_path != '' %}
Environment="LD_LIBRARY_PATH={{ pulp_ld_library_path }}"
{% endif %}
User={{ pulp_user }}
Group={{ pulp_group }}
WorkingDirectory=/var/run/pulpcore-content/
RuntimeDirectory=pulpcore-content

# timeout is needed Pulp to service its 1st request on extremely slow
# machines, such as qemu-emulated 2-core machines
ExecStart={{ __pulp_daemons_dir }}/gunicorn pulpcore.content:server \
          --bind '{{ pulp_content_bind }}' \
          --worker-class 'aiohttp.GunicornWebWorker' \
          --workers {{ pulp_content_workers }} \
          --timeout {{ pulp_service_timeout }} \
          --access-logfile -

# Enables tracking of process resource consumption at a unit & cgroup level.
CPUAccounting=yes
MemoryAccounting=yes

# This provides reconnect support for PostgreSQL and Redis. Without reconnect support, if either
# is not available at startup or becomes disconnected, this process will die and not respawn.
Restart=always
RestartSec=3

[Install]
WantedBy=multi-user.target
