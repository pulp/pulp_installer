# TODO: Maybe serve multiple `location`s, not just one.

{% if ansible_facts.os_family == "RedHat" %}
# The "nginx" package on fedora creates this user and group.
user nginx nginx;
{% endif %}
# Gunicorn docs suggest this value.
worker_processes 1;
events {
    worker_connections 1024;  # increase if you have lots of clients
    accept_mutex off;  # set to 'on' if nginx worker_processes > 1
}

http {
    include mime.types;
    # fallback in case we can't determine a type
    default_type application/octet-stream;
    server_tokens off;
    sendfile on;

    # If left at the default of 1024, nginx emits a warning about being unable
    # to build optimal hash types.
    types_hash_max_size 4096;

    upstream pulp-content {
        server {{ pulp_content_bind }};
    }

    upstream pulp-api {
        server {{ pulp_api_bind }};
    }

    server {
        # Gunicorn docs suggest the use of the "deferred" directive on Linux.
{% if pulp_webserver_disable_https | bool %}
        listen {{ pulp_webserver_http_port }} default_server deferred;
        {% if ansible_facts['all_ipv6_addresses'] is defined and ansible_facts['all_ipv6_addresses'] | length > 0 -%}
        listen [::]:{{ pulp_webserver_http_port }} default_server deferred;
        {%- endif %}
{% else %}
        listen {{ pulp_webserver_https_port }} default_server deferred ssl;
        {% if ansible_facts['all_ipv6_addresses'] is defined and ansible_facts['all_ipv6_addresses'] | length > 0 -%}
        listen [::]:{{ pulp_webserver_https_port }} default_server deferred ssl;
        {%- endif %}

        ssl_certificate {{ pulp_certs_dir }}/pulp_webserver.crt;
        ssl_certificate_key {{ pulp_certs_dir }}/pulp_webserver.key;
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;

        # intermediate configuration
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;

{% if pulp_webserver_disable_hsts is not mdellweg.filters.empty %}
        # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
        add_header Strict-Transport-Security max-age=15768000;
{% endif %}
{% endif %}

        server_name $hostname;

        # The default client_max_body_size is 1m. Clients uploading
        # files larger than this will need to chunk said files.
        client_max_body_size {{ pulp_client_max_body_size }};

        # Gunicorn docs suggest this value.
        keepalive_timeout 5;

        # static files that can change dynamically, or are needed for TLS
        # purposes are served through the webserver.
        root {{ pulp_webserver_static_dir }};

        location /pulp/content/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://pulp-content;
        }

        location {{ pulp_settings.api_root  | default("/pulp/") }}api/v3/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://pulp-api;
        }

        location /auth/login/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://pulp-api;
        }

        include pulp/*.conf;

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://pulp-api;
            # most pulp static files are served through whitenoise
            # http://whitenoise.evans.io/en/stable/
        }

        # ACME http-01 tokens, i.e, for Let's Encrypt
        location /.well-known/ {
            try_files $uri $uri/ =404;
        }

    }

{% if not pulp_webserver_disable_https | bool %}
    server {
        listen {{ pulp_webserver_http_port }} default_server;
        {% if ansible_facts['all_ipv6_addresses'] is defined and ansible_facts['all_ipv6_addresses'] | length > 0 -%}
        listen [::]:{{ pulp_webserver_http_port }} default_server;
        {%- endif %}
        server_name _;
        return 301 https://$host$request_uri;
    }
{% endif %}

}
