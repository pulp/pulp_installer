---
# installation of nginx on ubuntu doesn't do this automatically
- name: Create nginx user
  user:
    name: nginx
    system: true
  when: ansible_facts.distribution == 'Ubuntu'
  become: yes

- name: Set client_max_body_size
  set_fact:
    pulp_client_max_body_size: 10m
  when:
    - pulp_client_max_body_size == "1m"
    - developer_user is defined or developer_user_home is defined

- name: Install Nginx
  block:

    - name: Install Nginx
      package:
        name: nginx
        state: present

    - name: Install Nginx configuration file
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        mode: '0644'
      notify: reload nginx

    - name: Find pulp obsolete symlinks
      find:
        paths: /etc/nginx/conf.d
        file_type: link
        patterns: "pulp*"
      register: old_pulp_symlinks
      tags: cleanup

    - name: Remove pulp obsolete symlinks
      file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ old_pulp_symlinks.files }}"
      tags: cleanup

    - name: Create directory for Pulp Nginx snippets
      file:
        path: "/etc/nginx/pulp/"
        state: directory
        mode: '0755'
        serole: _default
        setype: _default
        seuser: _default

    - name: Identify Nginx snippets on the pulp_database_config host
      script:
        cmd: identify_snippets.py {{ __pulp_webserver_plugin.key | regex_replace("-", "_") | quote }} {{ pulp_webserver_server }}.conf
      args:
        executable: '{{ (__pulp_install_source == "packages") | ternary(__pulp_python_interpreter, __pulp_install_dir ~ "/bin/python") }}'
      register: snippet_filepaths
      loop: '{{ pulp_install_plugins_normalized | dict2items }}'
      loop_control:
        loop_var: __pulp_webserver_plugin
      delegate_to: "{{ __pulp_database_config_host }}"
      changed_when: false
      failed_when: snippet_filepaths.rc not in [0,10]
      check_mode: false

    - name: Copy snippets from the pulp_database_config host
      slurp:
        src: "{{ item.stdout.strip() }}"
      with_items: "{{ snippet_filepaths.results }}"
      register: snippet_contents
      delegate_to: "{{ __pulp_database_config_host }}"
      when:
        item.stdout.strip() != ""

    - name: Install snippets from the pulp_database_config host
      copy:
        content: "{{ item.content | b64decode }}"
        dest: "/etc/nginx/pulp/{{ item.item.__pulp_webserver_plugin.key }}.conf"
        mode: '0755'
        serole: _default
        setype: _default
        seuser: _default
      with_items: "{{ snippet_contents.results }}"
      when: item.content is defined
      notify: reload nginx

    - name: Start and enable Nginx
      systemd:
        name: nginx
        state: started
        enabled: true
        daemon_reload: true

  become: true
