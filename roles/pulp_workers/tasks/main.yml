---
- name: Get the database fields key from the pulp_database_config node
  command: "cat {{ __pulp_db_fields_key_path }}"
  delegate_to: "{{ hostvars['localhost']['pulp_database_config_host'] | default(inventory_hostname) }}"
  run_once: "{{ __pulp_run_once }}"
  register: pulp_db_fields_key_content
  changed_when: false
  check_mode: false
  become: true

- name: Copy Pulp Database Encryption Key from pulp_database_config node
  copy:
    content: "{{ pulp_db_fields_key_content.stdout }}"
    dest: "{{ __pulp_db_fields_key_path }}"
    owner: 'root'
    group: "{{ pulp_group }}"
    mode: 0640
    serole: _default
    setype: _default
    seuser: _default
    backup: true
  become: true

- name: Install service files
  template:
    src: pulpcore-worker@.service.j2
    dest: /lib/systemd/system/pulpcore-worker@.service
    owner: root
    group: root
    mode: 0644
  notify: Reload systemd and restart pulp workers
  become: true

- name: Get services
  service_facts:

- name: pulpcore resource manager
  block:

    - name: Disable pulpcore-resource-manager service
      systemd:
        name: pulpcore-resource-manager.service
        state: stopped
        enabled: false

    - name: Remove pulpcore-resource-manager service
      file:
        path: /lib/systemd/system/pulpcore-resource-manager.service
        state: absent

    - name: Reload systemd for the pulpcore-resource-manager removal
      systemd:
        daemon_reload: true

  become: true
  when:
    - ansible_facts.services['pulpcore-resource-manager.service'] is defined
    - __pulpcore_version is version('3.14', '>=')

- name: Get already existing workers
  set_fact:
    __pulp_workers_worker_svcs: '{{ __pulp_workers_worker_svcs|default([]) + [ item | regex_search("(?<=pulpcore-worker@)\d+(?=\.service$)") ] }}'
  loop: '{{ ansible_facts.services.keys() | list | select("match", "pulpcore-worker@\d+\.service") | list }}'

- name: Get the highest worker ID
  set_fact:
    __pulp_workers_worker_max: "{{ __pulp_workers_worker_svcs | map('int') | max }}"
  when: __pulp_workers_worker_svcs is defined

- name: Scale down workers
  systemd:
    daemon_reload: true
    name: pulpcore-worker@{{ __pulp_workers_worker_index }}.service
    state: stopped
    enabled: false
  loop: "{{ range(pulp_workers + 1, __pulp_workers_worker_max|int + 1) | list }}"
  loop_control:
    loop_var: __pulp_workers_worker_index
  when:
    - __pulp_workers_worker_max is defined
    - '__pulp_workers_worker_max|int + 1 > pulp_workers + 1'
  become: true

- name: Set states of new pulp workers
  systemd:
    daemon_reload: true
    name: pulpcore-worker@{{ __pulp_workers_worker_index }}.service
    state: started
    enabled: true
  loop: "{{ range(1, pulp_workers + 1) | list }}"
  loop_control:
    loop_var: __pulp_workers_worker_index
  become: true
