---
# These SELinux handlers are listed up top so that they are run 1st, before
# Pulp is restarted.
- name: Load the SELinux policy packages
  command: 'semodule -i /usr/local/share/selinux/{{ ansible_facts.selinux.type }}/{{ item }}.pp'
  loop: '{{ __pulp_selinux_policy_pkgs }}'
  become: true

# Note: we cannot flush handlers until after these are created later on in the
# Pulp role, after the SELinux policies are installed.
# Installing them earlier should mean the files are created with the context to
# begin with.
- name: Restore SELinux contexts on Pulp dirs that must exist
  command: '/sbin/fixfiles restore {{ __pulp_selinux_label_dirs | join(" ") }}'
  become: true
  # We need the when condition on this particular SELinux handler because it
  # gets triggered by "Collect static content".
  when:
    - ansible_facts.os_family == 'RedHat'
    # when permissive or enforcing. That would be stored in .mode & .config_mode
    - ansible_facts.selinux.status == "enabled"

# shell for handling '*' in the dir name
- name: Restore SELinux contexts on Pulp dirs that may exist
  shell: '/sbin/fixfiles restore {{ item }}'  # noqa 305
  become: true
  register: result
  changed_when: result.rc == 0
  failed_when: result.rc not in [0,255]
  with_items: "{{ __pulp_selinux_label_dirs_optional }}"
  when:
    - ansible_facts.os_family == 'RedHat'
    - ansible_facts.selinux.status == "enabled"

- name: Collect static content
  command: "{{ pulp_django_admin_path }} collectstatic --clear --noinput --link {{ pulp_collectstatic_ignore_list }}"
  # When run against the same FS, we do not want the multiple nodes'
  # commands to conflict with eachother. It sometimes happens.
  throttle: 1
  register: staticresult
  changed_when: "staticresult.stdout is not search('\n0 static files')"
  become: true
  become_user: '{{ pulp_user }}'
  # Restarting pulpcore-api is necessary for collectstatic to
  # work; whitenoise cannot see the files unless pulpcore-api is restarted.
  #
  notify:
    # the pulpcore-manager command does not run in the context of the daemon
    - Restore SELinux contexts on Pulp asset dirs
    - Restart all Pulp services
  environment:
    PULP_SETTINGS: "{{ pulp_settings_file }}"
    LD_LIBRARY_PATH: "{{ pulp_ld_library_path }}"

- name: Restore SELinux contexts on Pulp asset dirs
  command: '/sbin/fixfiles restore {{ pulp_user_home }}/assets'
  become: true
  # We need the when condition on this particular SELinux handler because it
  # gets triggered by "Collect static content".
  when:
    - ansible_facts.os_family == 'RedHat'
    # when permissive or enforcing. That would be stored in .mode & .config_mode
    - ansible_facts.selinux.status == "enabled"

- name: Restart all Pulp services
  include_tasks: handlers/restart_all_pulp.yml
